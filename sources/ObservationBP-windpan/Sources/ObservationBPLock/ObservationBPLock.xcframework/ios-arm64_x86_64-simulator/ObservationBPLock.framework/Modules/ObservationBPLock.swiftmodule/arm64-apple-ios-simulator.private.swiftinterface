// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ObservationBPLock
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum _ThreadLocal {
  public static var value: Swift.UnsafeMutableRawPointer? {
    get
    set
  }
}
public struct _ManagedCriticalState<State> {
  public init(_ buffer: Swift.ManagedBuffer<State, Swift.UnsafeRawPointer>)
  public init(_ initial: State)
  public func withCriticalRegion<R>(_ critical: (inout State) throws -> R) rethrows -> R
}
extension ObservationBPLock._ManagedCriticalState : @unchecked Swift.Sendable where State : Swift.Sendable {
}
extension ObservationBPLock._ManagedCriticalState : Swift.Identifiable {
  public var id: Swift.ObjectIdentifier {
    get
  }
  public typealias ID = Swift.ObjectIdentifier
}
