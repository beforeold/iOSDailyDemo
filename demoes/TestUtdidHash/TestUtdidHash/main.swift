//
//  main.swift
//  TestUtdidHash
//
//  Created by dinglan on 2021/5/10.
//

import Foundation

print("Hello, World!")

let list = """
    W++6zVcLGHcDACz18GrX5153
    W++HUQOSveADAOPa+dpOXG1c
    W+/1CQZgZ5IDAOHbIS56K2sG
    W+/KPGOHBW0DAO7AehLm5uzy
    W+/PnUklnQYDAJ6FilKDV5hR
    W+/SgP3tYEYDAHR3v+1zN6Es
    W+0H5TVhWxADAKPL2E2N0fbg
    W+0QO87GbXgDAKHaYY0oRzGI
    W+0ffQE3k14DAF3GC3BWAJM+
    W+3aYDHS0wsDAML4UJNuYMIQ
    W+40dKxDP/MDACW9XD/ssBul
    W+4NwWwxNr4DAO6uQUt52Lo0
    W+4lyZSwPSYDAIHddUgBGJGR
    W+5RU+/z6vwDAAR96CdzDTT1
    W+5lzLbnm5kDAJUonLCMldFQ
    W+7AOyYH2RQDAMxZI0dBmY4o
    W+A1FJYYEQ0DALSvJJI671hU
    W+BGjr2xgc4DAN38bIN22al8
    W+BS/6q4tGMDAKmzmRwOzGtw
    W+C9wFLmbsoDANQMyklblVys
    W+Co2tWJb1QDAOxJIV0HDyWi
    W+D7ezFgStoDAGIqiiSmexNd
    W+E1SlE5WrwDAJ+rivmek+ja
    W+E9oEbuOtYDAMo9rFLH/c+v
    W+EHpZYbGWEDACMJkvaAqgcr
    W+EMAw2AshwDAPSOB+lR94Ok
    W+EN0PZ6KE0DAOIRqP5JarsU
    W+Ei1WR3bBkDAGxBmtdvCPjt
    W+EjUGmaaacDAFlqOyLgTVIT
    W+Eoxr6V1tUDAFO0vx6+pOcS
    W+EwgNOSSjYDAAsOgu190Ril
    W+Fhjgk+d/4DABZJkl7zWiaG
    W+GK6MrXtrkDAHBqVmW6JtBJ
    W+GfihTcjr4DAO0uEcdoOkuW
    W+HISbaFDdEDAPCQLETPb349
    W+I0mcScBWcDAKCl3uw5UnR3
    W+I6yVg11TYDAGcsiyNlsuVf
    W+J6HlZiG+cDABRibpSMF/Rc
    W+JZONha3bUDAH+RxQuJqVug
    W+JifvUCz6EDAFw17ZV0rw+p
    W+KFkP1QOScDAKwwesyZEXrV
    W+KTnPjEpREDABy1NycaORyV
    W+KcG1LS4JADAGqEneTFuihX
    W+KkkZPL5ZwDAG0utusRBOt2
    W+Ko6JQlWDQDAKwYU2NP12Dj
    W+KqKYV1VJkDAFE9hwGAaw0M
    W+L4Hu30qF8DAJd7vsq/iHRz
    W+LOeJORld4DAGs/R2q44qr8
    W+Lnt4FKVtcDANPCLQ8iCnLj
    W+LzbqkBAyIDAKoVdmSs8Dv8
    W+MCvEOrCfMDAIyOy4DCR6vw
    W+MYoHoR8c4DABFaJiNd9zNO
    W+O+i4jWFDcDAMsGfg+B0Ox9
    W+O6Sqz/918DABdUebA5JFxe
    W+Om00SnnqgDAEEZFzPgYw2m
    W+PBMJ6Ux1sDAE5j7QcyAXjR
    W+PDDtqGTUsDANaEFF1Wcp2O
    W+PEaD+kdtMDAB3rcKnkkRcS
    W+POW+9StK8DAHOg32dDaF+P
    W+QBBmuCfcADAHFopEhm+D0C
    W+QDGPtrr/IDAACeUYVkjk/3
    W+QNMGzYEmQDACJWZbrB/1D5
    W+QUHFN9a3cDACr8u0PB0STZ
    W+QZfOKDVNoDAPQQQ776gr1A
    W+Qb0rDTWGMDANBx8tm4VziC
    W+Ql+g21eEMDAEehgJjjmZUb
    W+QqZSoBm0UDACOAwIrQHGpm
    W+RJhmOH1KkDABuMhE7DkthO
    W+RUOA9RDjcDAP+YFMMoFzwh
    W+SiaDoFZJ0DAMXGT9oAO5Zm
    W+T/TUgVVmkDABFbn4Hrz65f
    W+T6YiNXUqEDAAckD3elFKLx
    W+TGJA3DJJADAGCXuGLTFNQx
    W+TzEzQQ1G4DAL6xXp7VTa+y
    W+UQP9+fBOEDAMJy+ZzFiVgl
    W+USvrKl5a8DAOemMLMFOuKy
    W+Ua6d7qnpYDADxcmdX2a8U4
    W+UkbU7RtlIDALh0DbKK9iIx
    W+Up3NL5fmQDANc/QHpHy7Ct
    W+UuFodPwF4DAOzwlDGhe87i
    W+UyY7tk8z0DAGg5UzUZjnVK
    W+V+3I0IJqMDALv0oZLksAsW
    W+V3i8Cnc5gDADDOmvcK1HDw
    W+VUMSFO2LIDAF2yeWqmFT+6
    W+VZnfbEZoEDAFvcXgAq6EWE
    W+Vi8TG5Bn4DAGfoRyS3nzvO
    W+VohsaUBFwDAEdfy7Qi2Xcp
    W+W0x3k5qkEDALf8v0MVOIt1
    W+W4OwNSDO0DAJHwqITJmG0q
    W+W8hYSd2KYDAOUdxAa/53VI
    W+W9KD2vbbcDAGKSuSNtBeV4
    W+WA5VoJ7gMDAHIfwiWKzMv7
    W+WFpU6NDKkDAEG44N9MKpuZ
    W+WMlt4lFQsDAB1oX9oajvQN
    W+WOiW8ZFtgDAPBMMxEx/ONv
    W+WSHou/ROQDAHekpcwmXNV8
    W+WkZncTtCUDAOqsRtadLSek
    W+WkrY1Bb00DAMPKNdu9AXPb
    W+XH+0TPxl8DAJGxh8lFnqu/
    W+XWlX9pLP8DAOsLucRoRy47
    W+YSTfGiHZ4DAE1SNJSYHTqZ
    W+YdY4FQ3QoDAIuetTUfDWDt
    W+Yej0PHGbYDAFUzCEuB0tFR
    W+Yv0pubnosDAE0OyZhTTUbi
    W+Z5oiJjKK8DAFalaI71peBa
    W+Z6PNc0AscDAFO4ht8sD7K/
    W+ZjyI7K0TwDABH18reDnrRV
    W+ZnxRDohngDAOEz0LLokONf
    W+ZqMqty++IDAKktR3LVxZiD
    W+Zx01lXpYcDAGjY6VpVedeD
    W+a65/Pq+u0DAI/Kzm0qzaS8
    W+a9GnG6PcsDAHPSHmnd4VYA
    W+aLsLlhW1ADAIaGuC5U4/hE
    W+aMPEXP/s0DAEeSSoaUeFd0
    W+aOP36nKYsDABHimWD/30FQ
    W+aQOuBxsu0DAHjikHsyZyCR
    W+aXLmwE84IDABUCaXvajWzj
    W+aaPnKCfywDAL0XOVKKWP/3
    W+aqLW40rgwDABhIQrRCByhQ
    W+b/YVBjX/MDAEfwQOGY4354
    W+b7ZoyeaGUDAM8Hhwv1aoAB
    W+bCcnUsD/0DABHQ62sAaDTc
    W+bDZpFmfeIDAAS4PZw7RTzf
    W+bJbZQ5gv8DAFJm4oAatf3l
    W+bOjdlFxlMDANWhGCo0QoW9
    W+bc3SE4ce0DALAbiz52X3dY
    W+bcABWvda8DAFPFxd3L6MGg
    W+bga+CRZL8DAChR2F0OrMOE
    W+bl53gCgeMDAIbqebrnzvZj
    W+bqJDd66iEDAE8W8dlzBtAm
    W+brnY5SOqcDAKSU5BgNlCaQ
    W+buOiJIQsEDAOWRxC6TsSyp
    W+bud9+hbEwDAPX+Eo+j3s/S
    W+bxO8ikBccDAKF0yIdt7Jxq
    W+bxtvobI+YDAINGhUen4nSp
    W+bz6aLSbz0DALwSttbBA6r6
    W+cCxSmIXkcDAInZN0qLiRM0
    W+cDt3KMFpIDACpV75rxio0A
    W+cM3RMrGgIDAB7CBBSi8b++
    W+cMjh3yJ1kDACwAl9OWU5eG
    W+cOGsFCzwMDAEnpzJTduNYB
    W+cSaRcyBGIDAJ4fbYaWp1aL
    W+cT5+tbpiwDAFntiCkhekAk
    W+cYPweinP8DANBP/GqcR5im
    W+cbNV3GFUYDABBltFSm2e/R
    W+d4dFa6GKwDAONBRvER0z9Z
    W+d7Ngb/AtoDAJmimYJ0sY8F
    W+dELXhB5uYDAO5co+zzU3ur
    W+dICRhiHNoDAGtYOgs1e6M0
    W+dPIyCydHoDAErN7PXh6mCK
    W+dSpDfHehEDAFVpBmmr4jO9
    W+dU+vvD+UUDACtnrYM1HOZ5
    W+dlTwz75A4DANi35OVaQ3IX
    W+dm4QyuwB4DAIjopySNwifo
    W+drGNtH92wDAA7vJjmNAHZR
    W+drmgVdA34DACiXFHzV5lwL
    W+e0eq7cVWUDALx9LQReTdCF
    W+e2k21uCCwDAP4YEKqhBZKz
    W+e4BTIy850DAEiqi3EHRN7z
    W+e7RjVIFYwDAGAxTPfISY1j
    W+eDayneDIIDAN/YMmsfDAUG
    W+ePMvPU0eoDAFF2Ubv61r4a
    W+ePeIhuDVYDAOPJrIaDJkad
    W+eWDlTo8bADABVb75LyD4VT
    W+eX+LC5X88DAIlZwRDM83Ow
    W+eZraj82LYDAKWCEPDdNeJQ
    W+eau9l6OdgDAKphyO9CHnHy
    W+ecAzF0ZwEDAP5JiL21jl/V
    W+elfkSsLfUDADBJFU4XR/XA
    W+epW/swH/ADAJy5cIimyNAw
    W+f3g8L6DR0DANXLTn4CBvjT
    W+f7opg1gHwDAOJthZCaH8eL
    W+fMvGNNFJMDAKybiUyCpaj/
    W+fN+3p6ri8DAAV3Frh8wwLZ
    W+fRsLb7mQoDAG3joUOM5ZLu
    W+fV0aBTs3UDADMBBg5onOjo
    W+fj5+5mSrQDAIq209OopzlZ
    W+fkc1RPPwYDAENWLds5vh89
    W+fkgh4a/EsDAHTEC9sX7i+X
    W+fl3HL/QewDAPn47Je9rdEa
    W+flSB/o9XADANIuAjml6WhC
    W+fxMsRlie4DANG1xAPdkCRJ
    W+fz8U8wkbcDADSS7/aEAkaf
    W+g/eIApIBUDAHLWLjx/ZjHE
    W+g6/YrGpNIDALIeAxpl6SQP
    W+gDqvYjsD4DAIFC/KQZjWH0
    W+gHRXxg1cwDADE11yE+3DK6
    W+gJH0Ct1KgDAEUFG6NC6xo0
    W+gL/AP2VyoDAB9n+Btcm7BD
    W+gRmvziE5wDACCsG2hfp1sN
    W+gU9eUVBXgDAAuKBzliCGPA
    W+gY5rkO3pQDABAnXF/q96pl
    W+gbS7XftGwDAL06ZkFNfFy8
    W+gfIhvFT4EDAGazmWU2ojOU
    W+gh4Y3ZqkcDACKGc5Ld2nva
    W+gkaw5c7HsDAAGez1sDAgIQ
    W+gnJ9HUBKkDABGA6DnmryYV
    W+grQRurpfADABm+17pDUZGE
    W+gwsDut+P4DAMRAqDZrv/ZH
    W+gwwmK59HwDADNMsNQyA3xJ
    W+gymMezOCkDAGRjxNqPpMO5
    W+hFXf4s9/EDAEZ0wbWB1R3r
    W+hbLKzBgiUDAIM8uBr1CyOz
    W+hjwWNEqSYDAEzMurXHVuxZ
    W+k405bF56kDAFqJHh0VrtGF
    W+lc9W3lxIkDACqwI9Jfn3Gp
    W+oRXmBjjD0DAHpUo/SeQxw/
    W+pRo2TRkIQDABS6HUbUDvwf
    W+puvcG4DGMDACYo+GwdJ+JZ
    W+qJxc8XAhYDADXsafQ/vTMm
    W+qL2QsZM50DAIIVcFQb0Ksf
    W+qgZ00pJX8DAMVVijjFtt8t
    W+qhBE28xMkDADMGOWMEcILg
    W+r6b+mzqJoDAF1lfwEDMPsc
    W+rI9RWPnIgDAABcsS0i8nNE
    W+ra9glWY34DAFiR+q2D0Det
    W+w495pOJMwDAJth+p7QUk4r
    W+wWiBguSqYDADdm5YRX9zmY
    W+wh+yg01ocDAD63V62DJWC1
    W+wiFUccVI4DAADrUnHmTUNJ
    W+wrtUGdyLcDADi9J/xj+9XR
    W+wzps2eoA0DABZZO5/TunRL
    W+xIudadVRkDAK2UvQMP/5Ne
    W+xmwDXox3wDAC1AopMhMyLq
    W+y2Jy3asg8DAKeFDUnVHP4C
    W+yRsRZ0eM0DAGR6suIc9B09
    W+yiVqwabN4DACpKgOrPMwEa
    W+ynUc10DJIDAJNMlo4w5ksI
    W+z2Ed9ANxgDACJzhXkJUqHJ
    W+z5OUb2fekDAKhNPvjEMKp9
    W/+ea0O6Fb0DACxjpV0IhPbb
    W//ESlYM0G8DACrqx83dHQcV
    W//c+WJIti8DAPKa6FwQxpkA
    W/0I6fD+6TwDAPZk1s1VobX6
    W/3fiWLjy48DAFuL2wvzD58l
    W/4BlAEYE/IDANL+hnuLv3+f
    W/4NIw2mRi4DAHih05fsakpW
    W/4fezovLR8DALBvXpaRkAHp
    W/4uHD/tAKoDAONLUabXw1qZ
    W/5ckZf5mxoDAEgzjlz0K1C4
    W/6p6WuUjU0DAEe9dQ/cfi4L
    W/6yJPHMH6sDAMPBXaSK+CRB
    W/84VcYK1rEDAP8zB1SjaIRO
    W/8vnV0W2n4DAKVx6mxoibEL
    W/9GWRv4kAEDANKDFJMKYJPm
    W/9RtEaxoWcDACz+5Y2So4ak
    W/9wtH4o6gEDADOTOioZLxer
    W/AC7BibyroDAEMFUn3N2ck8
    W/AQlwy1EYADABqBoUHwOPYv
    W/ARdyspj+IDAOJeDBFjz0ac
    W/ATQR61zb0DACpG33y8Kw2u
    W/AWSUZs9sYDAKY3Z81ZKhIs
    W/Aqup28nLADAL7Msd3XMMI+
    W/AtCtWI6dkDANvx59o4kAgk
    W/C+AZ7aUSgDAIU1uZM60e1X
    W/CSG3jkiN8DAN6dQHyKgvf2
    W/CogliL5x8DAEQ4+ewC+9AP
    W/D1VKW2HjEDAIRvRV8G9f9S
    W/EFXgbSFwwDAPqcIZWph+QD
    W/EH8Pi6mKcDABvgDNDS6PeW
    W/FIEpba45gDAEjwbhuC4V0r
    W/FLlUHk6cwDAF064u0Cy3M6
    W/FdfRyRnsMDAG2MiTl5NUzE
    W/FhFKuVcCADAIah9sP/nA8X
    W/FtwAYQeD8DANGKY5JObF/P
    W/GNDmiBSewDAJS8s7XAXaCT
    W/GPGAAMn/wDAKxL8+q2K3kz
    W/GPcMCqHbUDAEcfxgXGXk1a
    W/Gk3mrkrCYDAJ4PNRA/OAJq
    W/Ln2rBILWcDAOZTkIBZC+5f
    W/Ndelpzc/4DAF4OLQwmBRdz
    W/Q1YbieV8MDANWKFkzGOhiL
    W/QPVz0evYkDAFublIv9TyMv
    W/RHswy+zr4DAMsvg2HS+kgU
    W/S9hOsXH6sDADUGIZmX+Rfz
    W/SQzabGKikDAG911aK+QWDz
    W/T/dg6PxJcDAN8jAG+g2Tj6
    W/V7al4DJyADALmwGaheX63o
    W/VqF84+ZsoDACk2FSzCTtLb
    W/WRHcE9mzUDAKf0+t5EGRkm
    W/XxEK/XwooDAMN2SSlim601
    W/XxUA2nk9wDADe761j4q6Cj
    W/YASbcuzfQDAEMT8EFCZFU5
    W/ZeODloT8QDADb5Py4F/YuM
    W/a9KaCVxYQDAKcSMeEfwco5
    W/aRIUjOBl8DAHWgKHFIEMUz
    W/c1aZjI9MgDAJEAV39lFx9D
    W/c8Dg2pG1YDAJqBdht4DceQ
    W/dJHrMXAYMDAEHX90Jp1R0r
    W/dLXRdlwREDAL4GKFR9SZmJ
    W/dWQlrmelUDAMhXbZ4AzpmY
    W/eA/8eMh+0DAEcuqhagakAN
    W/f/5FUROTYDAPcG2g+LIpMA
    W/gLYCTCq3MDALQIS59z/Xrf
    W/gbgIj7PBQDAN5TR2+1BpLs
    W/guhkxOkHQDAOl2timusBD7
    W/iKo31lJ+sDABPF7w7JU0kV
    W/iRyDc0uJsDAAtuMzDVxnaR
    W/iy1TJan7QDAPV0TiPoZbTG
    """

let components = (list as NSString).components(separatedBy: "\n")
var countList = Array(repeating: 0, count: 100)
print(components.count)

func iosHash(_ str: String) -> Int {
    abs((str as NSString).hash)
}

func murmurHash(_ str: String) -> UInt32 {
    MurmurHash.hashString(str, 1526958062)
}

for str in components {
    let ret = Int(murmurHash(str) % 100)
    countList[ret] = countList[ret] + 1
}
print("begin-\(CFAbsoluteTimeGetCurrent())")
print(countList.map { String($0) }.joined(separator: "\n"))
print("end-\(CFAbsoluteTimeGetCurrent())")
